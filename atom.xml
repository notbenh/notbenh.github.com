<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[notbenh yaks about stuff on the internet]]></title>
  <link href="http://notbenh.github.com/atom.xml" rel="self"/>
  <link href="http://notbenh.github.com/"/>
  <updated>2014-01-13T20:40:52-08:00</updated>
  <id>http://notbenh.github.com/</id>
  <author>
    <name><![CDATA[notbenh (aka ben hengst)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[check your habits]]></title>
    <link href="http://notbenh.github.com/blog/2014/01/13/check-your-habits/"/>
    <updated>2014-01-13T18:57:00-08:00</updated>
    <id>http://notbenh.github.com/blog/2014/01/13/check-your-habits</id>
    <content type="html"><![CDATA[<p>2013 was a great year for me to do some deep self assessment, come to
terms with emotions. Over all 2013 was a rough year and given the state
of 2014 thus far, I have yet to decide if it has been any better. The
upside though is that adversity is how you grow. I have taken the past
year to really dig in to what makes my brain tick, I have been picking
up philosophy and psychology books like they are going out of style.
Some of them have, others have not. I am a slow reader so I have yet to
get thru everything but it has helped me become more aware of my self.
I feel that I am far more in sync with my own emotions. Thus I have
come to a concussion: people, in general, are just shitty to each other.</p>

<p>The key to this conclusion is the &#8216;in general&#8217; part. Because the world
is complex, the brain builds subroutines and shortcuts to help make
sense of the world. Why reprocess a bunch of data when you already can
assume the answer? Your pet dog comes in to the room, does your brain
start to ponder if this is a threat? Mine doesn&#8217;t, it&#8217;s my dog Trek and
he either wants to go out side, snug, or play. These shortcuts are known
as habits but they are not limited to pets. At least in my brain, I have
habits that help me make meals, I have habits on getting from place to
place. I have so many habits that I could not even begin to count them,
and this is by design, they are subconscious. These are compiled
subroutines that are executed with out conscious interaction.</p>

<p>I had a few paragraphs here about how habits help but you get the point.
The key is when we take habits to the next level and abstract out from
our daily life. Do all cops hate blacks? Do all whites fear blacks? Do
all politicians lie? Do all republicans hate gays? Do all lesbians hate
men? Do all men have a lesbian fantasy? The list goes on and honestly
the answer to every one of these generalizations is no. If you think
about it for just a few seconds you can think of at least one person
that you know that would refute each one of these absolute statements.
Again because the world is complex our brain has built shortcuts, but
that is all that it is a shortcut. Your brain makes a generalization for
some reason and you go on living your life focusing on what your brain
feels is more important. Are members of the football team bullying you?
It might make sense to fear a football jersey. But if the last time that
happened was 20 years ago and you still fear a football jersey, is that
really the appropriate emotion for the stimulus? Just as you clean out
your closet from time to time it is healthy to question why you have the
assumptions and shortcuts that make you, well you.</p>

<p>This is not to say that chaining a habit is easy, but awareness is simple
to obtain and it is the start to any type of change. All you have to do is
ask why when you notice that you did anything that feels like it just
happened. Watching TV and happen to flip by a football game and you all
of sudden get all amped up for seemingly no reason, ask your self why.
Introduced to a person of another race, instantly have a presumption about
them, why? Feel that you are inferior to that guy for cubes over who you
have never really met but just seems intimidating&#8230; why? The trick is to
not just stop at the first answer, but to keep asking why, keep going until
there really is not a good answer to the simplest question in the world.
Be your own nagging 3 year old:</p>

<ul>
<li>Woah I just avoided that whole group of teens at the mall!</li>
<li>Why? Well they looked scary.</li>
<li>Why? There were like 12 of them.</li>
<li>Why does that matter? Well I guess it doesn&#8217;t.</li>
<li>Ok so why did you avoid them? I guess it was that one big guy?</li>
<li>So do you think you have a fear of big guys? Guess so?</li>
</ul>


<p>Does this imply that you have resolved anything? No! But becoming aware
helps you make better decisions despite your emotional reaction to
things. For example if you know that you have a habitual fear of large
men, then that might explain why you generally avoid that guy a few cubes
over? He might have never talked to you, never been in a meeting with
you but if he goes to the gym then you might have already determined
that he is out to get you with no evidence.</p>

<p>If you do not come to terms with your own bias, if you do not question
your own habits from time to time. Then you will be just as guilty as
any one else and at some point you will find your self being shitty to
some one else just because of a silly little habit of yours. It sucks
but, hay, the world is a complex place, right?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pondering a life beyond tech]]></title>
    <link href="http://notbenh.github.com/blog/2013/12/11/pondering-a-life-beyond-tech/"/>
    <updated>2013-12-11T21:42:00-08:00</updated>
    <id>http://notbenh.github.com/blog/2013/12/11/pondering-a-life-beyond-tech</id>
    <content type="html"><![CDATA[<p>As this year comes to a close it is that time to look back and assess
what has become of the past 12 months and honestly:</p>

<blockquote><p>2013 can go jump in a lake for all I care</p></blockquote>

<p>What started out like any other year has been a collection of
low-lights like having to say good night to a dog or
<a href="https://web.archive.org/web/20131207164233/http://stumptownsyndicate.org/2013/04/09/goodbye-igal/">loosing a great friend to depression</a>.
While sad and tragic as both of these events were, they were personal.
They both were events that leveraged the positive side of my social
network, we became closer as we dealt with the shared loss.</p>

<p>Though what bothers me more is when I look back on this year it will not be
the sad moments that brought me closer to my friends. Instead going
to be shitty backstabbing that pushes a community apart. For example
<a href="https://web.archive.org/web/20130517173829/http://blog.schwern.net/2013/05/15/yapcna-2013-withdrawal/">the perl community was all up in arms over a CoC</a>.
Which happened to be an interesting precursor for the
<a href="http://www.scribd.com/doc/170684165/Michael-Schwern-Exonerated">inverse</a>.
The negative reaction and general unsocial atmosphere caused me to
<a href="https://twitter.com/notbenh/status/383114590642376704">give up on twitter entirely</a>.</p>

<p>While the loss of connections with friends is in it self a sad event. I
am more disappointed that
<a href="https://web.archive.org/web/20131013075651/http://adainitiative.org/2013/09/the-ada-initiative-does-not-support-michael-schwerns-ally-work/">organizations</a>
and
<a href="http://geekfeminism.org/2013/09/30/co-signing-the-ada-initiatives-statement-on-michael-schwern/">people</a>
that I once respected for being advocates for positive change decided instead
to take an emotional shortcut and
<a href="https://twitter.com/ashedryden/status/381465338443202560">behave in a negative manner</a>.
Even though they clearly stated that this is not
<a href="https://web.archive.org/web/20131202182601/http://ashedryden.com/blog/the-risk-in-speaking-up">productive</a>.</p>

<p>So here I am, December 2013 pondering if I should completely walk away
from this broken community. I used to feel loved and supported by this
community. I used to feel like we had a shared vision for what a better
future could look like for all, indiscriminate of any label. Though
sadly this year has shown me that key members of this community would
rather push an agenda of hate. Is it even worth my time to continue to
associate my self with such people? I am left feeling that my time would
be better spent doing something that I enjoy.</p>

<p>I would rather continue to teach as at least folks are generally
grateful for my time. I would rather do fun things with my car as that
is actually fun. I used to be an artist with much more then code. Hate,
depression, and generally ugly feelings: join the rest of the year at
the bottom of the lake, I have better things to do with my time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cold brew coffee]]></title>
    <link href="http://notbenh.github.com/blog/2013/07/01/cold-brew-coffee/"/>
    <updated>2013-07-01T08:22:00-07:00</updated>
    <id>http://notbenh.github.com/blog/2013/07/01/cold-brew-coffee</id>
    <content type="html"><![CDATA[<p>The process of &#8216;making coffee&#8217; is just a process of relying on osmosis to extract chemicals from coffee beans into water. If you use a French press you are using heat to accelerate the process. Espresso adds pressure to further reduce the time to that tasty cup of coffee. Though the process of cold brewing coffee goes the other way, by removing the desire for a quick cup of coffee you can let water do its own thing.</p>

<p>First I should state that I am by no means an expert. What I will describe here is just my process. Also I should note that I do not measure much in the kitchen. Just like my grandma I do most things by feel. Please take this as a guide and experiment; see what works for <strong>you</strong>.</p>

<p>Remember that this is just coffee. It&#8217;s cheap to play, so play!</p>

<p><img src="http://farm6.staticflickr.com/5494/9182962173_cc6c576b55_n.jpg" alt="the setup" />
To start, I use an old peanut-butter jar purely because it was what I had at hand. Any non-reactive resealable container will work just as well. Unlike other methods of brewing, you are not making just a single cup of coffee. I find my jar provides me with a few days&#8217; worth of coffee extract. As you play you will find what works for your particular coffee habit.</p>

<p><img src="http://farm3.staticflickr.com/2810/9185177090_ae76665709_n.jpg" alt="beans in a jar" />
With a containment device sorted, the next step is beans. I tend to use a fine grind. My thinking is that I will get a more complete extraction due to the greater surface area, though I have no evidence to back up this hypothesis. These grounds then go in to the peanut butter jar, about an inch of grounds in a 7 inch jar, so let&#8217;s say a 1:7 ratio of coffee to water.</p>

<p>Next step is the liquid: just simple water. As with any beverage, use water that you will enjoy drinking. Remember that this is the majority of your final beverage. If you do not like what comes out of your tap, then filter it.</p>

<p><img src="http://farm3.staticflickr.com/2889/9185175862_788b0c7525_n.jpg" alt="make a slurry" />
I add enough water (let&#8217;s say 1/3 full) to cover the grounds. At this stage the goal is to just make sure that all the grounds are wet. By adding only enough water to cover at this step it allows me to swirl the water to make a slurry and look for dry pockets (difficult without a clear vessel). If you need, grab a spoon or chopstick and make sure that there are no dry pockets. It would be a shame to miss out on any coffee goodness which could be extracted.</p>

<p><img src="http://farm6.staticflickr.com/5549/9185174392_a25926174c_n.jpg" alt="fill up the jar" />
Once everything is wet, top off the vessel with water, and seal it up. Most of the time I put it in the fridge though this is mostly to make sure that it is out of the way. If you have counter space then room temp will work just as well. Again this is another variable that you can play with as the main goal here is to let the water do the extraction over time.</p>

<p>Then we just let it all sit. Because this is a slow process, there is less risk in missing on the timing. I have done runs as short as 18 hours and as long as 48. I have found that 24-ish hours is a sweet spot, just enough time to let the water do its thing completely and not so long that I forget about it. For me the beans play a much larger role in determining the outcome then a few hours on either side. However I bet that anything in the 12 hour or less range will tend to be a bit weak when it comes to the final outcome.  If I remember I will go give the jar a shake or two throughout the day but I have not found that this is a strict requirement as osmosis is a very powerful ally.</p>

<p>Lastly, when you feel that your brew is done, it&#8217;s time to filter. If at all possible disturb the jar as little as possible as most of the solids will have settled in the bottom. Anything still in the jar is less that has to be filtered at this stage. I pour the content of the jar in to my French press without the filtering mesh (yet), and let things settle for a minute or two. Again the thinking is what is in the bottom here is not going to end up in my cup. From here I apply the press filter and pour thru another metal filter in to my final containment device.</p>

<p>For me having a separate brew and storage vessel  gives me the flexibility to be brewing while still having something to drink. Though again this is not a strict requirement. When I was starting out I let the French press settle and then would rinse out the jar and just pour the cold brew back in to the same jar I brewed in. It&#8217;s glass, it doesn&#8217;t care.</p>

<p>So now that we have our coffee, what should it taste like?  It might be my reliance on metal filters but my cold brew always has some fines. Therefore is a body to it that I do not get with other brewing methods. Also the words <em>strong</em> and <em>mellow</em> come to mind. It does have a bit more zip, though this is likely due to a stronger concentrate of all the coffee magic being extracted from the bean. There is a different flavor profile that happens with cold brewing when compared to a hot method, even for the same bean. I am guessing that there are some elements that just can not be extracted in the cold, or possibly are destroyed in the hot. For example, I do not get much of the tannic bitterness that I find with the hot methods. If you like an acidic cup of coffee, this is not the process for you.</p>

<p>Lastly, what can you do with this stuff? The trick is to stop thinking of this as coffee to be had one cup at a time. Cold brew becomes an ingredient to be added to things. Like your coffee warm? Use 1/2 cup cold brew and 1/2 boiling water and now you have a cup of &#8220;drip&#8221; coffee. Rough day at work? 1/2 cup cold brew, a splash of water and 1/3 cup of low-shelf whiskey. Got the post-lunch-naps? 1 shot straight up. The possibilities are nearlyendless when it comes to what this stuff can do.</p>

<p>So there you have it: cold brewing. Enjoy!</p>

<p>Many thanks to <a href="https://twitter.com/brewpony">@brewpony</a> for the beans and the lovely <a href="https://twitter.com/vmbrasseur">@vmbrasseur</a> for making my words make sense!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tracking time should not be hard]]></title>
    <link href="http://notbenh.github.com/blog/2013/06/03/tracking-time-should-not-be-hard/"/>
    <updated>2013-06-03T16:06:00-07:00</updated>
    <id>http://notbenh.github.com/blog/2013/06/03/tracking-time-should-not-be-hard</id>
    <content type="html"><![CDATA[<p>I go thru bouts of trying really hard to be organized. I am going thru another
such event and have decided to dust off my old time tracking script. It
effectively is a journal of context changes that are stored in such a way that
timing can be inferred from. I still like the concept but the interface was
overly complex and the reporting was not able to deal well with anything more
then a single day.</p>

<p>Thus time to open up the hood and get to hacking. I&#8217;ll save the details for
another post if I really want to go down that rabbit hole, instead I would
rather focus on usage.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  time.pl personal:blog write about time tracking</span></code></pre></td></tr></table></div></figure>


<p>So the key here is that the first &#8216;word&#8217; is expected to be the project. Any
use of : is to denote a sub project, in this case I am working on this very
blog post. Like I said: simple.</p>

<p>So that&#8217;s great, <em>slow clap</em> it&#8217;s simple but how is this time tracking?
Great observation, the secret sauce is that what time.pl is doing here is it
is taking note of the time and then adding both a timestamp and every thing to
a single log file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  [Mon Jun 3 18:02:35 PDT 2013] personal:blog write about time tracking</span></code></pre></td></tr></table></div></figure>


<p>So now I am writing the post, but when I am done I am going to then have some
dinner. Thus when I change context, I just make a note of it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  time.pl off dinner</span></code></pre></td></tr></table></div></figure>


<p>Because each entry is stamped, we can code a report that will do the diff for
each entry and the &#8216;next&#8217; and infer the amount of time that was spent on it.
In effect just track your context changes, and let the robot do the work for
you. EXACTLY!</p>

<p>As a bonus, to make all of this possible you end up with a journal of
everything you did in the day. For me I use this as habit tracking. Do I
really spend that much time on email? Wow, I spent over an hour on coffee
breaks today. Congrats, you spent more then 2 hours on personal projects!</p>

<p>All of this is possible by noticing when you change context and making a
little note of it.</p>

<p>If you wanna play along the code is all up on <a href="https://github.com/notbenh/TimeTrax">github</a> feel free to play along.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how i use tdone to tdid todos]]></title>
    <link href="http://notbenh.github.com/blog/2012/10/30/how-i-use-tdone/"/>
    <updated>2012-10-30T22:02:00-07:00</updated>
    <id>http://notbenh.github.com/blog/2012/10/30/how-i-use-tdone</id>
    <content type="html"><![CDATA[<p>I&#8217;ve recently gone on yet-another-get-my-life-in-order kick. I tend to get these once a year, I get all excited about making lists and stuff. I spend a bunch of time working out how to build a list. I get all meta, I start to get worked up over tools, I get infatuated. Then after some amount of time I come to the realization that this is way more work then is really needed for such a simple job. I stop trying at all and I still some how get stuff done.</p>

<p>This time around I got mad and yet again starting building my self a todo list manager as everything I tried seemed like I was right back to my old tricks. I don&#8217;t want to end up having to manage my management tool. So I though about what was the absolute minimum that I wanted: an ordered list that was simple to edit and visible from anywhere. It had to be so simple that I will still use this in a week&#8230; so I built <a href='https://github.com/notbenh/tdone'>tdone</a>. Some 50 lines of slightly wordy perl that wraps around a file. It can add a line, it can remove a line, it can sort the lines and it can display the lines of the file&#8230; that&#8217;s it. This file is expected to be an env var, this way the user can manage it, not the code.</p>

<p>Because I wrote this for me, there is next to nothing when it comes to syntax: any number of leading +&#8217;s are seen as a marker of priority and are used to sort the lines of the file (more first, none last). This is the only &#8220;actionable&#8221; aspect of the line, everything else is just a trip for the color-coding. I have been leading a word with : to mark it as a tag, and @ as a location. This allows me to say something like :</p>

<p>  ++ :blog about :tdone @laptop</p>

<p>The : and @ are here only for the visual punch, they are used as markers for coloring, tags are green, locations are bold but that is all they do.</p>

<p>So this is the foundation, just a file and some simple code. Now here&#8217;s the magic of the simple-tool mind set. This file sits in a folder that is watched by Dropbox, thus every machine that I sit behind will have access of this list. This includes my phone, so everything is covered for me but you can build this how ever you wanted to. Wanna have some history for your list, set up a simple <a href='https://github.com/guard/guard'>guard</a> script that commits all changes to some git repo and syncs&#8230; it&#8217;s simple. Hooks, notifications, just about anything is possible by hooking things with IFTTT or any of the event services.</p>

<p>So this is my setup, let&#8217;s see how long I stick with it. If you think this is something you would find useful, feel free to grab the code and run with it. Want something different fork it and make it your own. Have fun and be productive!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[you are reading the lets all try this again version]]></title>
    <link href="http://notbenh.github.com/blog/2012/10/25/you-are-reading-the-lets-all-try-this-again-version/"/>
    <updated>2012-10-25T16:59:00-07:00</updated>
    <id>http://notbenh.github.com/blog/2012/10/25/you-are-reading-the-lets-all-try-this-again-version</id>
    <content type="html"><![CDATA[<p>Hello world, I am testing @jhelwigs fantasistic code in this horrable editor thinggie&#8230;. keep your pants on n-such.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[learns you a version control?]]></title>
    <link href="http://notbenh.github.com/blog/2012/08/02/learns-you-a-version-control/"/>
    <updated>2012-08-02T22:54:00-07:00</updated>
    <id>http://notbenh.github.com/blog/2012/08/02/learns-you-a-version-control</id>
    <content type="html"><![CDATA[<p>Version control sounds like a big complex topic, and to some degree it is. Though like most things in software I&#8217;m sure you already have a great understanding of what version control does. So let&#8217;s put on our &#8220;hats of pretend time&#8221; and start off with a little story:</p>

<blockquote><p>I have an important paper that I am writing. Things are going great: only 3 more pages to go. Ooop, I just deleted that last paragraph but I didn&#8217;t want to do that. Click &#8216;undo&#8217; and ~whew~ , it&#8217;s back.</p></blockquote>

<p><strong>Tada!</strong>&#8217; I just used version control. Undo works in this case by remembering what I did (delete). Because it stored a little bit of history on my paper it can then &#8216;undo&#8217; that action to get me back to a previous state of my paper (before the delete). The problem with undo is that it is the most simple version control: in most cases it only remembers one thing.</p>

<blockquote><p>Well that doesn&#8217;t seem like a good thing. What if I wanted to see what my paper looked like yesterday? So how do I get around the history limitation? I can save my own history! For example, after every paragraph I write I save off another version of the file&#8211;paper_1.txt for the first one, paper_2.txt for the next and so on&#8211;so that even if I completely deleted everything I would still have a back up and only lose the paragraph that I was working on.</p></blockquote>

<p>Now that I have started to build a system I have the ability to save my history. No longer do I have to worry about closing my paper and losing the undo history; it&#8217;s all saved elsewhere. I have a way to know what version came before and what came after. I can look back and see how my paper grew as I worked on it. All of these things are now possible because I have access to the history. And really that is all a version control system is: a way to access the history these files. It allows for all sorts of interesting things to all of a sudden become possible because you no longer have to focus on making everything perfect. Having version control is a net that allows you to safely experiment and always have a safe place to land if things go badly.</p>

<blockquote><p>Lets take this story a bit further. Let&#8217;s say that I really didn&#8217;t do my research and I soon realize that my entire premise is wrong. The good news is that I only have to edit a few paragraphs but they are all over the place and it could get really messy. I have some really good stuff in here and I want to make sure that I can look back at this version, but how am I going to remember that this is the version of my paper right before I changed direction? <strong>Ohh!</strong> I can save a copy of my paper and call it paper_wrong_premise.txt and that way I can refer back to it at some later point.</p></blockquote>

<p>Again, this is a version control concept, it is often called a &#8216;tag&#8217;. All we&#8217;ve really done is create a version, though this time we gave it a descriptive name rather then a forgettable number. Now as a human I no longer need to remember was it paper_26.txt or paper_29.txt that I made the change.</p>

<blockquote><p>And now for something completely different! I&#8217;m finding that my paper is kinda dry and boring. It would be way more interesting if I changed the format to be more like a play. This way I can make it a conversation, I can add humor, I can make it interesting. But this is a big drastic change to my paper. Is there a way I could create a new version that I could work from so that I could try out the conversation idea but if I don&#8217;t like it I could later just throw only that part away? There sure is! I could make a copy of my paper and call it paper_play_1.txt.</p></blockquote>

<p>As I&#8217;m sure you guessed by now most version control systems have a way to do this too, it&#8217;s often called a branch. You can almost think of it like a tag but in reverse. A tag explains what <em>has</em> happened whereas a branch is a way to explain what is <em>about to</em> happen.</p>

<blockquote><p>So that was fun. I have a much better paper in the conversation format, but in the new format I could never really get page 1 worked out any better than the old boring page 1. So I&#8217;ll just leave the conversation paper as page 2 and beyond. I&#8217;ll copy in the boring page 1 and save that of as my paper_32.txt (or what ever the next number is) as I want this to now be the main version of the paper that I work from.</p></blockquote>

<p>In version control speak this is known as a merge, it&#8217;s a way for you to collapse the work from one branch on to another branch. In this case I collapsed the work that I did from paper_play onto the main paper branch.</p>

<blockquote><p>There. I think that the paper is good enough, but it always helps to have some one else look it over. I want to have <strong>you</strong> read my paper, I want you to be able to make some changes and I want to know what changes you made. I can save this off as paper_to_be_reviewed.txt and email it to you.</p></blockquote>

<p>This is where version control gets really fun, distribution and sharing. Effectively, what I did here is I created a branch for you to play in. You can make any changes you want and they don&#8217;t get in my way. Conceivably I could continue to work on my main paper branch if I wanted to and you can work on the to_be_reviewed version. Later we can merge our changes, or if I really wanted to get picky I could only take part of your changes. It really doesn&#8217;t matter because they both have their own little tracks of history.</p>

<h2>Ok story time over. Let&#8217;s review</h2>

<p>Version control is just a system that allows you to keep the history of something. In this example it was my paper, but it can be anything. The version control system will have a way that I can keep this history in order and allow for me to look back in time and see how things grew. This system allows me to play without fear of losing anything. I can experiment and see how it works out. If I like it, I keep it. If it was a complete failure, so what? I just roll back to something that was working. Version control allows me to collaborate with others and reduce the frustration because every change is ideally tracked on it&#8217;s own. Version control allows me to play safely and not care about the consequences.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RANT: FUCK YOU OCTOPRESS]]></title>
    <link href="http://notbenh.github.com/blog/2012/03/15/rant-fuck-you-octopress/"/>
    <updated>2012-03-15T18:46:00-07:00</updated>
    <id>http://notbenh.github.com/blog/2012/03/15/rant-fuck-you-octopress</id>
    <content type="html"><![CDATA[<p>WTF: Why do developers of software hate there users so much that they activly decide to make the simple and expected things hard when they should be easy! For example user.github.com gh-pages expect to deploy to master, and I&#8217;m sure that just about every other self hosted thing will expect that master is the production branch&#8230; So it seems that Octopress, the blogging package for &#8220;Hackers&#8221; would follow suit? ~GASP~ they don&#8217;t, they have this sources branch, THAT THEY DON&#8217;T CREATE FOR YOU, that you have to read thru the Rakefile to even figure out WTF is going on?!?</p>

<p>So thanks to <a href="https://twitter.com/#!/jhelwig">@jhelwig</a> that got sorted by renaming master to source and then the rake magic seems to build master under the hood. I don&#8217;t even understand why this was a good idea, other then master now only has the generated code and not everything else. If the point was to &#8220;hide passwords&#8221; then you can simply just add the config files to the ignore file. Unless I&#8217;m completely miss the obvious it seems like we are inventing a new workflow just for the fun of it.</p>

<p>With the core of things up and apparently running&#8230; we now get to creat a post:</p>

<pre><code>&gt; rake new\_post["silly name for a post"] 
Creating new post: source/_posts/2012-03-15-silly-name-for-post.markdown
</code></pre>

<p>~sigh~ really last time I checked most unix tools only complain on error, so building a script that&#8217;s telling me that it&#8217;s going to think about something is completely pointless. Further more what my expectation was is that I wanted to create a new post, with your blog softwarez, as in I want to type&#8230; thus why are you now expecting me to COPY that file name and then tell vim (currently set as $EDITOR bu the way) to fucking edit that file. I&#8217;m guessing that it would be all of what 1 possibly 2 lines to make that a system call in the rake file. So again why not make this simple for the user? Oh that&#8217;s right this is a tool kit for hackers so we expect that all the users of this toolkit have the ablilty to solve this problem for us so we don&#8217;t need to care about them. =(</p>

<p>Problems are designed for fixing, so lets first take care of that <strong>HORRABLE</strong> fuck rake and it&#8217;s silly pass me prams like nothing else. As a perl dev let&#8217;s make this simple by making a &#8217;<a href="https://github.com/notbenh/notbenh.github.com/blob/source/new">new</a>&#8217; script. Now all I have to say is :</p>

<pre><code>&gt; new post another silly post
Creating new post: source/_posts/2012-03-15-another-silly-post.markdown
</code></pre>

<p>That&#8217;s progress, so now can we tell rake to just do what I wanted and not tell me that it was able to create a file, OH LOOK, the rake file says that it wrote the file before it writes the file&#8230; FAIL. Lets <a href="https://github.com/notbenh/octopress/commit/61701815ed97d2509264f4d00b9d2536d4d70cde">fix that up</a>&#8230; so that&#8217;s done. Now lets have the Rakefile actually DO something usefull for me by having it kick start this file with my <a href="https://github.com/notbenh/octopress/commit/c5c1e3ff88451efafd7d37a35e97206935aeccb2">$EDITOR</a>.</p>

<p>There&#8230; now I have a system that&#8217;s WAY more user freindly&#8230; and it only took what an hour&#8230; and I&#8217;m not a ruby dev. Thanks again to <a href="https://twitter.com/#!/jhelwig">@jhelwig</a> for talking me off the ledge and letting me know that most of this could be worse.</p>

<p>&#8211; notbenh~</p>
]]></content>
  </entry>
  
</feed>
